prototype(Carbon.Link:Content) < prototype(Neos.Fusion:Value) {
	property = ${property ? property : 'link'}
	@context {
		property = ${this.property}
		read = ${q(node).property(this.property)}
	}
	@ignoreProperties = ${['property']}

	value = Neos.Fusion:Case {
		@context.linkType = Carbon.Link:Type {
			read = ${read}
		}

		isAsset {
			condition = ${linkType == 'asset'}
			renderer = Carbon.Link:Asset {
				read = ${read}
			}
		}
		isNode {
			condition = ${linkType == 'node'}
			renderer = Neos.Fusion:Value {
				node = ${Neos.Link.convertUriToObject(read, documentNode)}
				value = ${q(this.node).property('title')}
			}
		}
		isEmail {
			condition = ${linkType == 'mail'}
			renderer = ${String.replace(read, 'mailto:', '')}
		}
		isHttp {
			condition = ${String.startsWith(read, 'http')}
			renderer = ${String.pregReplace(read, '/^http(s)?:\/\//', '')}
		}
		isDoubleSlash {
			condition = ${String.startsWith(read, '//')}
			renderer = ${String.pregReplace(read, '/^\/\//', '')}
		}
		fallback {
			condition = ${linkType ? true : false}
			renderer = ${read}
		}
		noLink {
			condition = true
			renderer = false
		}
	}

}
